# This file is autogenerated by maturin v1.3.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Zig
        run: |
            case "${{ matrix.target }}" in
              x86_64) ZIG_ARCH="x86_64" ;;
              x86) ZIG_ARCH="x86" ;;
              aarch64) ZIG_ARCH="aarch64" ;;
              armv7a) ZIG_ARCH="armv7a" ;;
              riscv64) ZIG_ARCH="riscv64" ;;
              powerpc64le) ZIG_ARCH="powerpc64le" ;;
              powerpc) ZIG_ARCH="powerpc" ;;
            esac
            
            ZIG_VERSION="0.12.0"
            wget "https://ziglang.org/download/${ZIG_VERSION}/zig-linux-${ZIG_ARCH}-${ZIG_VERSION}-dev.1571+03adafd80.tar.xz"
            tar -xf "zig-linux-${ZIG_ARCH}-${ZIG_VERSION}-dev.1571+03adafd80.tar.xz"
            sudo mv "zig-linux-${ZIG_ARCH}-${ZIG_VERSION}-dev.1571+03adafd80/zig" /usr/local/bin/
            rm -rf "zig-linux-${ZIG_ARCH}-${ZIG_VERSION}-dev.1571+03adafd80"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --zig
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Install SQLite on Windows
        run: |
            choco install sqlite
            [Environment]::SetEnvironmentVariable("LIB", "$env:LIB;C:\Program Files\SQLite\lib", [System.EnvironmentVariableTarget]::Process)
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
